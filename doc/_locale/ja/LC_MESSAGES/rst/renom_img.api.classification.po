# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Grid
# This file is distributed under the same license as the ReNomIMG package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ReNomIMG \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-01 11:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/renom_img.api.classification.rst:2
msgid "renom\\_img.api.classification"
msgstr ""

#: ../../docstring of renom_img.api.classification.darknet.Darknet:1
msgid "Bases: :class:`renom.layers.function.parameterized.Sequential`"
msgstr ""

#: ../../docstring of renom_img.api.classification.darknet.Darknet19:1
msgid "Bases: :class:`renom.layers.function.parameterized.Model`"
msgstr ""

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:1
#: renom_img.api.classification.densenet.DenseNet169:1
#: renom_img.api.classification.densenet.DenseNet201:1
msgid "Bases: :class:`renom_img.api.classification.densenet.DenseNetBase`"
msgstr ""

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:1
msgid "DenseNet121 Model"
msgstr ""

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:3
#: renom_img.api.classification.densenet.DenseNet169:3
#: renom_img.api.classification.densenet.DenseNet201:3
#: renom_img.api.classification.vgg.VGG19:3
msgid ""
"If the argument load_weight is True, pretrained weight will be "
"downloaded. The pretrained weight is trained using ILSVRC2012."
msgstr "もし引数load_weightがTrueなら、事前学習済みの重みがダウンロードされます。事前学習の重みはILSVRC2012を使って学習しています."

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121
#: renom_img.api.classification.densenet.DenseNet169
#: renom_img.api.classification.densenet.DenseNet201
#: renom_img.api.classification.inception.InceptionV1
#: renom_img.api.classification.inception.InceptionV1.get_optimizer
#: renom_img.api.classification.inception.InceptionV2
#: renom_img.api.classification.inception.InceptionV2.get_optimizer
#: renom_img.api.classification.inception.InceptionV3
#: renom_img.api.classification.inception.InceptionV4
#: renom_img.api.classification.inception.InceptionV4.get_optimizer
#: renom_img.api.classification.resnet.ResNet101
#: renom_img.api.classification.resnet.ResNet110
#: renom_img.api.classification.resnet.ResNet32
#: renom_img.api.classification.resnet.ResNet34
#: renom_img.api.classification.resnet.ResNet44
#: renom_img.api.classification.resnet.ResNet50
#: renom_img.api.classification.resnet.ResNet56
#: renom_img.api.classification.vgg.VGG16
#: renom_img.api.classification.vgg.VGG19
msgid "Parameters"
msgstr "パラメータ"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:6
#: renom_img.api.classification.densenet.DenseNet169:6
#: renom_img.api.classification.densenet.DenseNet201:6
#: renom_img.api.classification.inception.InceptionV1:6
#: renom_img.api.classification.inception.InceptionV2:6
#: renom_img.api.classification.inception.InceptionV3:6
#: renom_img.api.classification.inception.InceptionV4:6
#: renom_img.api.classification.resnet.ResNet101:8
#: renom_img.api.classification.resnet.ResNet110:8
#: renom_img.api.classification.resnet.ResNet32:8
#: renom_img.api.classification.resnet.ResNet34:8
#: renom_img.api.classification.resnet.ResNet44:8
#: renom_img.api.classification.resnet.ResNet50:8
#: renom_img.api.classification.resnet.ResNet56:8
#: renom_img.api.classification.vgg.VGG16:5
#: renom_img.api.classification.vgg.VGG19:6
msgid "Array of class names"
msgstr "クラス名の配列"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:7
#: renom_img.api.classification.densenet.DenseNet169:7
#: renom_img.api.classification.densenet.DenseNet201:7
msgid "Growth rate of the number of filters."
msgstr "特徴量マップの増加数"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:9
#: renom_img.api.classification.densenet.DenseNet169:9
#: renom_img.api.classification.densenet.DenseNet201:11
#: renom_img.api.classification.inception.InceptionV1:9
#: renom_img.api.classification.inception.InceptionV2:9
#: renom_img.api.classification.inception.InceptionV3:9
#: renom_img.api.classification.inception.InceptionV4:9
#: renom_img.api.classification.resnet.ResNet101:9
#: renom_img.api.classification.resnet.ResNet110:9
#: renom_img.api.classification.resnet.ResNet32:9
#: renom_img.api.classification.resnet.ResNet34:9
#: renom_img.api.classification.resnet.ResNet44:9
#: renom_img.api.classification.resnet.ResNet50:9
#: renom_img.api.classification.resnet.ResNet56:9
msgid "Input image size."
msgstr "入力画像のサイズ"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:11
#: renom_img.api.classification.densenet.DenseNet169:11
#: renom_img.api.classification.densenet.DenseNet201:13
#: renom_img.api.classification.inception.InceptionV1:11
#: renom_img.api.classification.inception.InceptionV2:11
#: renom_img.api.classification.inception.InceptionV3:11
#: renom_img.api.classification.inception.InceptionV4:11
#: renom_img.api.classification.resnet.ResNet101:11
#: renom_img.api.classification.resnet.ResNet110:11
#: renom_img.api.classification.resnet.ResNet32:11
#: renom_img.api.classification.resnet.ResNet34:11
#: renom_img.api.classification.resnet.ResNet44:11
#: renom_img.api.classification.resnet.ResNet50:11
#: renom_img.api.classification.resnet.ResNet56:11
msgid "True if the overal model is trained."
msgstr "モデル全体を学習する場合はTrue"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:16
#: renom_img.api.classification.densenet.DenseNet169:16
#: renom_img.api.classification.densenet.DenseNet201:18
#: renom_img.api.classification.inception.InceptionV1:16
#: renom_img.api.classification.inception.InceptionV2:16
#: renom_img.api.classification.inception.InceptionV3:16
#: renom_img.api.classification.inception.InceptionV4:16
#: renom_img.api.classification.resnet.ResNet101:16
#: renom_img.api.classification.resnet.ResNet110:16
#: renom_img.api.classification.resnet.ResNet32:20
#: renom_img.api.classification.resnet.ResNet34:16
#: renom_img.api.classification.resnet.ResNet44:16
#: renom_img.api.classification.resnet.ResNet50:16
#: renom_img.api.classification.resnet.ResNet56:16
#: renom_img.api.classification.vgg.VGG16:16
#: renom_img.api.classification.vgg.VGG19:17
msgid ""
"if the argument num_class is not 1000, last dense layer will be reset "
"because the pretrained weight is trained on 1000 classification dataset."
msgstr "事前学習のデータセットは1000クラスのため、もし引数num_classが1000でなかった場合は最後のDense層はリセットされます。"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:20
#: renom_img.api.classification.densenet.DenseNet169:20
#: renom_img.api.classification.densenet.DenseNet201:22
#: renom_img.api.classification.inception.InceptionV1:20
#: renom_img.api.classification.inception.InceptionV2:20
#: renom_img.api.classification.inception.InceptionV3:20
#: renom_img.api.classification.inception.InceptionV4:20
#: renom_img.api.classification.resnet.ResNet101:20
#: renom_img.api.classification.resnet.ResNet110:20
#: renom_img.api.classification.resnet.ResNet32:24
#: renom_img.api.classification.resnet.ResNet34:20
#: renom_img.api.classification.resnet.ResNet44:20
#: renom_img.api.classification.resnet.ResNet50:20
#: renom_img.api.classification.resnet.ResNet56:20
#: renom_img.api.classification.vgg.VGG16:20
#: renom_img.api.classification.vgg.VGG19:21
msgid "References"
msgstr "引用"

#: ../../docstring of renom_img.api.classification.densenet.DenseNet121:21
#: renom_img.api.classification.densenet.DenseNet169:21
#: renom_img.api.classification.densenet.DenseNet201:23
msgid ""
"Gao Huang, Zhuang Liu, Laurens van der Maaten, Kilian Q. Weinberger "
"Densely Connected Convolutional Network "
"https://arxiv.org/pdf/1608.06993.pdf"
msgstr ""

#: ../../docstring of renom_img.api.classification.densenet.DenseNet169:1
msgid "DenseNet169 Model"
msgstr ""

#: ../../docstring of renom_img.api.classification.densenet.DenseNet201:1
msgid "DenseNet201 Model"
msgstr ""

#: ../../docstring of renom_img.api.classification.densenet.DenseNet201:9
#: renom_img.api.classification.inception.InceptionV1:7
#: renom_img.api.classification.inception.InceptionV2:7
#: renom_img.api.classification.inception.InceptionV3:7
#: renom_img.api.classification.inception.InceptionV4:7
msgid "True if the pre-trained weight is loaded."
msgstr "事前学習の重みがロードされていない場合はTrue"

#: ../../docstring of renom_img.api.classification.inception.InceptionV1:1
#: renom_img.api.classification.inception.InceptionV2:1
#: renom_img.api.classification.inception.InceptionV3:1
#: renom_img.api.classification.inception.InceptionV4:1
msgid "Bases: :class:`renom_img.api.classification.Classification`"
msgstr ""

#: ../../docstring of renom_img.api.classification.inception.InceptionV1:1
msgid "Inception V1 model"
msgstr ""

#: ../../docstring of renom_img.api.classification.inception.InceptionV1:3
#: renom_img.api.classification.inception.InceptionV2:3
#: renom_img.api.classification.inception.InceptionV3:3
#: renom_img.api.classification.inception.InceptionV4:3
#: renom_img.api.classification.resnet.ResNet101:3
#: renom_img.api.classification.resnet.ResNet110:3
#: renom_img.api.classification.resnet.ResNet32:3
#: renom_img.api.classification.resnet.ResNet34:3
#: renom_img.api.classification.resnet.ResNet44:3
#: renom_img.api.classification.resnet.ResNet50:3
#: renom_img.api.classification.resnet.ResNet56:3
msgid ""
"If the argument load_pretrained_weight is True, pretrained weight will be"
" downloaded. The pretrained weight is trained using ILSVRC2012."
msgstr "もし引数load_pretrained_weightがTrueなら、事前学習済みの重みがダウンロードされます。事前学習の重みはILSVRC2012を使って学習しています."

#: ../../docstring of renom_img.api.classification.inception.InceptionV1:21
msgid ""
"Christian Szegedy, Wei Liu, Yangqing Jia , Pierre Sermanet, Scott Reed "
",Dragomir Anguelov, Dumitru Erhan, Vincent Vanhoucke, Andrew Rabinovich "
"Going Deeper with Convolutions "
"https://www.cs.unc.edu/~wliu/papers/GoogLeNet.pdf"
msgstr ""

#: ../../docstring of
#: renom_img.api.classification.inception.InceptionV1.get_optimizer:1
#: renom_img.api.classification.inception.InceptionV2.get_optimizer:1
#: renom_img.api.classification.inception.InceptionV4.get_optimizer:1
msgid "Returns an instance of Optimiser for training Yolov1 algorithm."
msgstr "Yolov1アルゴリズムのOptimiserのインスタンスを返却します。"

#: ../../docstring of renom_img.api.classification.inception.InceptionV2:1
msgid "Inception V2 model"
msgstr ""

#: ../../docstring of renom_img.api.classification.inception.InceptionV2:21
#: renom_img.api.classification.inception.InceptionV3:21
msgid ""
"Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, "
"Zbigniew Wojna Rethinking the Inception Architecture for Computer Vision "
"https://arxiv.org/abs/1512.00567"
msgstr ""

#: ../../docstring of renom_img.api.classification.inception.InceptionV3:1
msgid "Inception V3 model"
msgstr ""

#: ../../docstring of renom_img.api.classification.inception.InceptionV4:1
msgid "Inception V4 model"
msgstr ""

#: ../../docstring of renom_img.api.classification.inception.InceptionV4:21
msgid ""
"Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi "
"Inception-v4, Inception-ResNet and the Impact of Residual Connections on "
"Learning https://arxiv.org/abs/1602.07261"
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet101:1
#: renom_img.api.classification.resnet.ResNet110:1
#: renom_img.api.classification.resnet.ResNet32:1
#: renom_img.api.classification.resnet.ResNet34:1
#: renom_img.api.classification.resnet.ResNet44:1
#: renom_img.api.classification.resnet.ResNet50:1
#: renom_img.api.classification.resnet.ResNet56:1
msgid "Bases: :class:`renom_img.api.classification.resnet.ResNetBase`"
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet32:1
msgid "ResNet32 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet32:16
msgid ""
"6n + 2(The first conv and the last dense) = 32 → n = 5 5 sets of a layer "
"block in each block"
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet101:21
#: renom_img.api.classification.resnet.ResNet110:21
#: renom_img.api.classification.resnet.ResNet32:25
#: renom_img.api.classification.resnet.ResNet34:21
#: renom_img.api.classification.resnet.ResNet44:21
#: renom_img.api.classification.resnet.ResNet50:21
#: renom_img.api.classification.resnet.ResNet56:21
msgid ""
"Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun Deep Residual Learning "
"for Image Recognition https://arxiv.org/abs/1512.03385"
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet34:1
msgid "ResNet34 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet44:1
msgid "ResNet44 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet50:1
msgid "ResNet50 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet56:1
msgid "ResNet56 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet101:1
msgid "ResNet101 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.resnet.ResNet110:1
msgid "ResNet110 model."
msgstr ""

#: ../../docstring of renom_img.api.classification.vgg.VGG16:1
#: renom_img.api.classification.vgg.VGG19:1
msgid "Bases: :class:`renom_img.api.classification.vgg.VGGBase`"
msgstr ""

#: ../../docstring of renom_img.api.classification.vgg.VGG16:1
msgid ""
"VGG16 model. If the argument load_weight is True, pretrained weight will "
"be downloaded. The pretrained weight is trained using ILSVRC2012."
msgstr "VGG16モデル。もし引数load_weightがTrueなら、事前学習済みの重みがダウンロードされます。事前学習の重みはILSVRC2012を使って学習しいます."

#: ../../docstring of renom_img.api.classification.vgg.VGG16:9
#: renom_img.api.classification.vgg.VGG19:10
msgid "Input image size"
msgstr "入力画像サイズ"

#: ../../docstring of renom_img.api.classification.vgg.VGG16:11
#: renom_img.api.classification.vgg.VGG19:12
msgid "True if the overall model is trained, otherwise False"
msgstr "モデル全体を学習させる場合はTrue、そうでなければFalse"

#: ../../docstring of renom_img.api.classification.vgg.VGG16:21
#: renom_img.api.classification.vgg.VGG19:22
msgid ""
"Karen Simonyan, Andrew Zisserman Very Deep Convolutional Networks for "
"Large-Scale Image Recognition https://arxiv.org/abs/1409.1556"
msgstr ""

#: ../../docstring of renom_img.api.classification.vgg.VGG19:1
msgid "VGG19 model."
msgstr ""

